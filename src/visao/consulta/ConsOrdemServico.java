/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao.consulta;

import controle.ClienteFactory;
import controle.OrdemServFactory;
import controle.UsuaFactory;
import java.util.List;
import java.util.Objects;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelo.bean.Cliente;
import modelo.bean.OrdemServico;
import modelo.bean.Usuario;

/**
 *
 * @author bruno
 */
public class ConsOrdemServico extends ConsPadrao {

    /**
     * Creates new form ConsOrdemServico
     */
    private List<Object> lstOS;
    private int idUsuario;
    private JComboBox<String> jCbStatus;
    private JComboBox<String> jCbTrPeca;
    private JFormattedTextField jFTFDtAbertura;
    private JFormattedTextField jFTFDtEncerramento1;
    private JFormattedTextField jFTFDtPrevisao;
    private JTextField jTextField1;
    private JTextField jTextField9;
    private JTextField jTextField10;
    private JTextField jTextFieldIdOS;
    private JTextField jTFNumero;
    private List<Integer> lstIds;
    
    public ConsOrdemServico() {
        initComponents();
        super.setSize();    
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de ordens de serviço");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened
    
    private void listarOrdensServ(DefaultTableModel modelo) {
        for (int i = 0; i < lstOS.size(); i++) {
            String dtEncerramento = "";
            if (((OrdemServico) lstOS.get(i)).getDtEncerramento() != null) {
                dtEncerramento = ((OrdemServico) lstOS.get(i)).getDtEncerramento().toString();
                dtEncerramento = super.formatarData(dtEncerramento);
            }
            String dtPrevisao = "";
            if (((OrdemServico) lstOS.get(i)).getPrazoEntrega() != null) { 
                dtPrevisao = ((OrdemServico) lstOS.get(i)).getPrazoEntrega().toString();
                dtPrevisao = super.formatarData(dtPrevisao);
            }
            String dtAbertura = "";
            if (((OrdemServico) lstOS.get(i)).getDtAbertura() != null) { 
                dtAbertura = ((OrdemServico) lstOS.get(i)).getDtAbertura().toString();
                dtAbertura = super.formatarData(dtAbertura);
            }

            if (((List<Usuario>) new UsuaFactory().consultar(this.idUsuario)).get(0).getTipo().equals("Comum"))   
                modelo.addRow(new String[]{
                     ((OrdemServico) lstOS.get(i)).getNumero().toString(), 
                     ((OrdemServico) lstOS.get(i)).getCliente().getNome(), 
                     ((OrdemServico) lstOS.get(i)).getCarro().getNome(),
                     ((OrdemServico) lstOS.get(i)).getPeca().getNome(),
                     dtAbertura,
                     dtEncerramento,
                     dtPrevisao,
                     ((OrdemServico) lstOS.get(i)).getTrocPeca(),
                     ((OrdemServico) lstOS.get(i)).getStatus()});
            else
                modelo.addRow(new String[]{
                     ((OrdemServico) lstOS.get(i)).getId().toString(), 
                     ((OrdemServico) lstOS.get(i)).getNumero().toString(), 
                     ((OrdemServico) lstOS.get(i)).getCliente().getNome(), 
                     ((OrdemServico) lstOS.get(i)).getCarro().getNome(),
                     ((OrdemServico) lstOS.get(i)).getPeca().getNome(),
                     dtAbertura,
                     dtEncerramento,
                     dtPrevisao,
                     ((OrdemServico) lstOS.get(i)).getTrocPeca(),
                     ((OrdemServico) lstOS.get(i)).getStatus()}); 
        }
        super.getTable().setModel(modelo);
    }
    
    public void setIdUsuario(int idUsuario) {
        this.idUsuario = idUsuario;
    }

    public void setLstIds(List<Integer> lstIds) {
        this.lstIds = lstIds;
    }
  
    @Override
    public void listar(String info) {
        String numero = "";
        if (!info.equals(""))
            numero = " and numero like '" + info + "%'";
            
        if (((List<Usuario>) new UsuaFactory().consultar(this.idUsuario)).get(0).getTipo().equals("Comum")) {
            String colunas[] = {"Número", "Cliente", "Carro", "Peça", "Dt. abertura", 
                                "Dt. encerramento", "Dt. previsão", "Troca de peça", "Status"};
            DefaultTableModel modelo = new DefaultTableModel(colunas, 0);
            super.getBtnExcluir1().setVisible(false);
            List<Object> cli = (List<Object>) new ClienteFactory().consultar("where idUsuario="+this.idUsuario);
            
            int idCliente = 0;
            if (!cli.isEmpty())
                idCliente = ((Cliente) cli.get(0)).getId();
          
            lstOS = (List<Object>) new OrdemServFactory().consultar(
                                "from OrdemServico where idCliente="+idCliente+" and status <> 'Encerrada' "+numero);
            if (!lstOS.isEmpty()) {
                this.listarOrdensServ(modelo);
                this.setVisible(true);
            } else
                JOptionPane.showMessageDialog(null, "Você não possui nenhuma OS em execução no momento.");
        } else {
            String colunas[] = {"ID", "Número", "Cliente", "Carro", "Peça", "Dt. abertura", 
                                "Dt. encerramento", "Dt. previsão", "Troca de peça", "Status"};
            DefaultTableModel modelo = new DefaultTableModel(colunas, 0);
            
            lstOS = (List<Object>) new OrdemServFactory().consultar("from OrdemServico where 1=1 "+numero);
            this.listarOrdensServ(modelo);
            this.setVisible(true);
        } 
    }

    @Override
    public void excluir() {
        super.excluirPadrao(new OrdemServFactory());
    }

    @Override
    public void preencherCad(Vector vect) {
        if (vect.get(9).toString().equals("Encerrada"))
          this.jCbStatus.setSelectedIndex(2);
        if (vect.get(9).toString().equals("Em execução"))
          this.jCbStatus.setSelectedIndex(1);
        if (vect.get(9).toString().equals("Em aberto"))
          this.jCbStatus.setSelectedIndex(0);
        
        if (vect.get(8).toString().equals("Sim"))
          this.jCbTrPeca.setSelectedIndex(1);
        if (vect.get(8).toString().equals("Não"))
          this.jCbTrPeca.setSelectedIndex(0);
        
        this.jFTFDtAbertura.setValue(vect.get(5).toString());
        
        if (!vect.get(6).toString().equals(""))
            this.jFTFDtEncerramento1.setValue(vect.get(6).toString());
        else
            this.jFTFDtEncerramento1.setValue(null);
        
        if (!vect.get(7).toString().equals(""))
            this.jFTFDtPrevisao.setValue(vect.get(7).toString());
        else
            this.jFTFDtPrevisao.setValue(null);
        
        this.jTextField1.setText(vect.get(2).toString());
        this.jTextField9.setText(vect.get(3).toString());
        this.jTextField10.setText(vect.get(4).toString());
        this.jTextFieldIdOS.setText(vect.get(0).toString());
        this.jTFNumero.setText(vect.get(1).toString());
        
        Object obj = new OrdemServFactory().consultar(" where id = " + vect.get(0).toString());
        OrdemServico os = ((List<OrdemServico>) obj).get(0);
        this.lstIds = null;
        this.lstIds.add(os.getCliente().getId());
        this.lstIds.add(os.getCarro().getId());
        this.lstIds.add(os.getPeca().getId());
    }

    public void setjCbStatus(JComboBox<String> jCbStatus) {
        this.jCbStatus = jCbStatus;
    }

    public void setjCbTrPeca(JComboBox<String> jCbTrPeca) {
        this.jCbTrPeca = jCbTrPeca;
    }

    public void setjFTFDtAbertura(JFormattedTextField jFTFDtAbertura) {
        this.jFTFDtAbertura = jFTFDtAbertura;
    }

    public void setjFTFDtEncerramento1(JFormattedTextField jFTFDtEncerramento1) {
        this.jFTFDtEncerramento1 = jFTFDtEncerramento1;
    }

    public void setjFTFDtPrevisao(JFormattedTextField jFTFDtPrevisao) {
        this.jFTFDtPrevisao = jFTFDtPrevisao;
    }

    public void setjTextField1(JTextField jTextField1) {
        this.jTextField1 = jTextField1;
    }

    public void setjTextField9(JTextField jTextField9) {
        this.jTextField9 = jTextField9;
    }

    public void setjTextField10(JTextField jTextField10) {
        this.jTextField10 = jTextField10;
    }
    
    public void setjTextFieldIdOS(JTextField jTextFieldIdOS) {
        this.jTextFieldIdOS = jTextFieldIdOS;
    }
    
    public void setjTFNumero(JTextField jTFNumero) {
        this.jTFNumero = jTFNumero;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}